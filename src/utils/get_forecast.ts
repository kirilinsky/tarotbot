import rawCards from "../cards/data.json";
import { CardPosition, CardSeason, CardType } from "../types/card";
import { getTimeOfDay } from "./get_daytime";
import { getRandomItem } from "./get_random_item";
import { getSeasonFromDate } from "./get_season";
import { UserType } from "../types/user";
import { additional } from "../cards/additional";
import { CardAdditional, CardAdditionals } from "../types/additional";

export function getNarrativeForecast(user: UserType) {
  const cards = rawCards as CardType[];
  const card = cards[Math.floor(Math.random() * cards.length)];
  const cardExtras: CardAdditional = (additional as CardAdditionals)[card.id];

  const position: CardPosition = Math.random() > 0.5 ? "upright" : "reversed";
  const season: CardSeason = getSeasonFromDate();
  const timeOfDay = getTimeOfDay();
  const side = card[position];

  const ageMeaning = card.ageSpecificMeanings[user.age_group];
  const genderHint = getRandomItem(card.genderHints[user.gender] ?? []);
  const seasonLine = card.seasonalHint[season];

  const focusHint = getRandomItem(
    cardExtras?.focusHints?.[user.focus_area!] ?? []
  );
  const lifePhaseHint = getRandomItem(
    cardExtras?.lifePhaseHints?.[user.life_phase!] ?? []
  );
  const dailyTeaser = getRandomItem(
    cardExtras?.dailyHook?.teaser?.[user.gender]?.[user.age_group] ?? []
  );
  const dailyPromise = getRandomItem(
    cardExtras?.dailyHook?.fullPromise?.[user.gender]?.[user.age_group] ?? []
  );
  const emotionalTone = side.emotionalTone[timeOfDay];
  const affirmation = getRandomItem(side.affirmations?.[user.gender] ?? []);

  const story = `
üÉè *–°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –∫–∞—Ä—Ç–∞: ${card.name}*  
${
  position === "upright" ? "–ü—Ä—è–º–æ–µ" : "–ü–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç–æ–µ"
} –ø–æ–ª–æ–∂–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –∑–Ω–∞–∫: _${side.meaning.toLowerCase()}_

üåø *–ö–æ–Ω—Ç–µ–∫—Å—Ç*: ${seasonLine}  
üîç *–ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —ç—Ç–∞–ø*: ${lifePhaseHint}  
üéØ *–¢–µ–∫—É—â–∏–π —Ñ–æ–∫—É—Å*: ${focusHint}

üí¨ *–°–æ–≤–µ—Ç*: ${side.advice}  
‚ù§Ô∏è *–û—Ç–Ω–æ—à–µ–Ω–∏—è*: ${side.love}  
üíº *–†–∞–±–æ—Ç–∞*: ${side.career}  
‚ö†Ô∏è *–û—Å—Ç–æ—Ä–æ–∂–Ω–æ*: ${side.warning}

üåÄ *–°–µ–π—á–∞—Å —Ç—ã –º–æ–∂–µ—à—å –æ—â—É—â–∞—Ç—å*: _${emotionalTone}_  
ü™û *–ê—Ñ—Ñ–∏—Ä–º–∞—Ü–∏—è –¥–Ω—è*: _${affirmation}_

${ageMeaning} ${genderHint}

üéÅ *–ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–Ω—è*: ${dailyTeaser}  
‚ú® *–û–±–µ—â–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã*: ${dailyPromise}

‚Äî ‚Äî ‚Äî  
üîÆ *–ò–Ω–æ–≥–¥–∞ –æ–¥–Ω–æ–≥–æ –≤–∑–≥–ª—è–¥–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ...*  
–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ? –ü–æ–ø—Ä–æ–±—É–π –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ ‚Äî –∏ —Ç—ã —É–≤–∏–¥–∏—à—å, –∫–∞–∫ –≤—Å—ë —Å–≤—è–∑–∞–Ω–æ.
`.trim();

  return {
    cardId: card.id,
    name: card.name,
    position,
    season,
    text: story,
  };
}
